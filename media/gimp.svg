<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 108.007 36.007" fill="#fff" fill-rule="evenodd" stroke="#000" stroke-linecap="round" stroke-linejoin="round"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script><use xlink:href="#P" x=".507" y=".507"/><defs><radialGradient cx="50%" cy="50%" r="65%" fx="50%" fy="50%" id="A"><stop offset="0%"/><stop offset="100%" stop-opacity="0"/></radialGradient><radialGradient cx="35%" cy="49%" r="102%" fx="35%" fy="49%" id="B"><stop offset="0%" stop-color="#857c63"/><stop offset="100%" stop-color="#221f19"/></radialGradient><linearGradient x1="88.85%" y1="26.02%" x2="11.40%" y2="71.95%" id="C"><stop offset="0%"/><stop offset="100%" stop-opacity="0"/></linearGradient><linearGradient x1="28.29%" y1="31.21%" x2="107.68%" y2="150.92%" id="D"><stop offset="0%" stop-color="#fff"/><stop offset="100%" stop-color="#fff" stop-opacity="0"/></linearGradient><radialGradient cx="50%" cy="15%" r="73%" fx="50%" fy="15%" id="E"><stop offset="0%" stop-color="#fff"/><stop offset="100%" stop-color="#b9b9b0"/></radialGradient><radialGradient cx="34%" cy="31%" r="46%" fx="34%" fy="31%" id="F"><stop offset="0%" stop-color="#5b676b"/><stop offset="100%" stop-color="#141718"/></radialGradient><linearGradient x1="54.32%" y1="6.03%" x2="50.71%" y2="88.43%" id="G"><stop offset="0%" stop-color="#fff"/><stop offset="100%" stop-color="#fff" stop-opacity="0"/></linearGradient><linearGradient x1="78.40%" y1="45.50%" x2="45.94%" y2="96.50%" id="H"><stop offset="0%" stop-color="#6e3d09"/><stop offset="24.2%" stop-color="#ea8113"/><stop offset="62.1%" stop-color="#5c3307"/><stop offset="100%" stop-color="#e07c12"/></linearGradient><linearGradient x1="44.99%" y1="73.56%" x2="72.34%" y2="41.47%" id="I"><stop offset="0%" stop-color="#bdbdbd"/><stop offset="33.3%" stop-color="#e2e2e2"/><stop offset="66.7%" stop-color="#a3a3a3"/><stop offset="100%" stop-color="#ddd"/></linearGradient><radialGradient cx="18%" cy="37%" r="69%" fx="18%" fy="37%" id="J"><stop offset="0%" stop-color="#696969"/><stop offset="100%"/></radialGradient><linearGradient x1="51.55%" y1="-14.91%" x2="67.89%" y2="73.11%" id="K"><stop offset="0%" stop-color="#fff"/><stop offset="100%" stop-color="#fff" stop-opacity="0"/></linearGradient><linearGradient x1="57.90%" y1="60.93%" x2="24.29%" y2="75.05%" id="L"><stop offset="0%"/><stop offset="100%" stop-opacity="0"/></linearGradient><linearGradient id="M" x1="51.86%" y1="76.52%" x2="63.33%" y2="-52.04%"><stop offset="0%"/><stop offset="100%" stop-opacity="0"/></linearGradient><linearGradient id="N" x1="43.18%" y1="58.66%" x2="33.60%" y2="157.10%"><stop offset="0%" stop-color="#fff"/><stop offset="100%" stop-color="#fff" stop-opacity="0"/></linearGradient><linearGradient id="O" x1="35.51%" y1="212.81%" x2="58.10%" y2="22.86%"><stop offset="0%" stop-color="#4d4d4d"/><stop offset="100%" stop-color="#4d4d4d" stop-opacity="0"/></linearGradient></defs><symbol id="P" overflow="visible"><path d="M40.874 23.544c0 4.448-8.29 8.054-18.517 8.054S3.839 27.992 3.839 23.544s8.291-8.054 18.517-8.054 18.517 3.606 18.517 8.054z" stroke="none" fill="url(#A)"/><path d="M9.418 3.789s2.917 6.015 9.741 5.844c14.3-.359 16.807-7.818 17.165-8.894s.908-.913 1.035.081C42.022 43.151 4.994 24.989 3.679 17.779c7.354-2.151 5.56-6.278 5.56-6.278l.18-7.711z" stroke="#2e3436" fill="url(#B)" stroke-width="1.015"/><path d="M14.861 21.644c6.839 1.368 10.319.099 12.358-1.474-.538-.695-1.457-1.457-1.457-1.457s2.388.664 3.229 1.749.312 1.749.102 3.133c-.487-1.218-1.4-1.672-1.524-2.155-1.832 2.534-6.398 2.428-12.697.203z" stroke="none" fill="url(#C)"/><g stroke-width="1.015"><path d="M36.404 3.156a12.43 12.43 0 0 1-2.726 3.139c-2.672 2.211-7.156 4.223-14.492 4.406-4.286.107-7.055-1.962-8.751-3.805l-.127 4.535c.138.426.421 1.421-.063 2.76-.521 1.451-2.187 2.943-5.043 4.059.254.53.502 1.059 1.268 1.806 1.043 1.02 2.493 2.119 4.217 3.108 3.448 1.979 7.916 3.544 12.081 3.615s7.972-1.253 10.591-5.073c2.415-3.521 3.736-9.485 3.044-18.548z" stroke="url(#D)" fill="none" opacity=".185"/><path d="M16.862 12.847c-.003 1.999-1.44 3.708-3.41 4.055s-3.903-.771-4.587-2.65.078-3.978 1.809-4.979c1.276-.739 2.85-.74 4.127-.002s2.063 2.101 2.061 3.575z" stroke="#888a85" fill="url(#E)"/><path d="M8.644 14.401c1.293 1.793 1.81 3.94 1.354 5.632s-1.815 2.672-3.564 2.571-3.624-1.268-4.917-3.061-1.809-3.94-1.353-5.632 1.815-2.672 3.564-2.571 3.624 1.268 4.917 3.061z" fill="url(#F)"/><path d="M15.688 13.458a1.99 1.99 0 0 1-3.858.682 1.99 1.99 0 0 1 2.864-2.401 1.99 1.99 0 0 1 .994 1.719z" fill="#2e3436"/><path d="M1.82 12.86c-.648.485-.99 1.307-.959 2.422s.47 2.48 1.374 3.686 2.089 2.01 3.151 2.356 1.954.24 2.594-.239.991-1.346.966-2.467-.459-2.458-1.359-3.66-2.07-1.999-3.131-2.329-1.99-.253-2.639.234z" stroke="url(#G)" fill="none" opacity=".28"/></g><path d="M4.812 14.728c0 .769-.342 1.479-.897 1.864a1.54 1.54 0 0 1-1.794 0c-.555-.384-.897-1.095-.897-1.864s.342-1.479.897-1.864a1.54 1.54 0 0 1 1.794 0c.555.384.897 1.095.897 1.864zm9.501-2.187c0 .761-.616 1.375-1.375 1.375s-1.375-.616-1.375-1.375.616-1.375 1.375-1.375 1.375.616 1.375 1.375z" stroke="none"/><g stroke-width="1.015"><path d="M26.099 13.295a4.84 4.84 0 0 1-9.388 1.649 4.84 4.84 0 0 1 6.968-5.848 4.84 4.84 0 0 1 2.42 4.197z" stroke="#888a85" fill="url(#E)"/><path d="M24.721 14.012c.001 1.133-.812 2.104-1.928 2.301s-2.212-.436-2.599-1.501.047-2.254 1.03-2.82c.722-.415 1.61-.415 2.331.002s1.165 1.185 1.166 2.018z" fill="#2e3436"/></g><path d="M23.107 12.936c0 .892-.723 1.614-1.614 1.614s-1.614-.723-1.614-1.614.723-1.614 1.614-1.614 1.614.723 1.614 1.614z" stroke="none"/><g stroke-width="1.015"><g fill-rule="nonzero"><path d="M36.015 27.758l.941-1.868c-3.496-2.558-9.943-4.42-9.943-4.42-1.117-.52-1.47.483-.696 1.136 0 0 5.513 3.952 9.699 5.156z" stroke="#673907" fill="url(#H)"/><path d="M40.498 29.484l.503-1.114-3.904-2.501-.311-.026-.135-.431c-.567.355-1.391 1.675-1.172 2.416l.426-.161.228.221 4.369 1.595z" stroke="#888a85" fill="url(#I)"/></g><path d="M37.968 27.37l2.592 1.113" stroke="#fff" fill="none"/></g><g stroke="none"><g fill-rule="nonzero"><path d="M46.172 34.214c-1.217-4.131-1.649-7.412-4.829-7.119-2.562.239-2.744 3.904-.097 4.922 2.551.977 4.923 2.199 4.923 2.199z" fill="url(#J)"/><path d="M41.533 27.43c.366-.108.762-.012 1.037.25a1.07 1.07 0 0 1 .302 1.024c-.089.371-.37.665-.735.772s-.762.012-1.037-.25a1.07 1.07 0 0 1-.302-1.024c.089-.371.37-.665.735-.772z" opacity=".528"/><path d="M36.881 25.91a.72.72 0 0 1 .903.86.72.72 0 0 1-1.196.352.72.72 0 0 1 .293-1.212z"/><path d="M44.64 31.744s-.397-1.483-1.271-2.255c-.31-.273.081-.675.372-.322.631.763.898 2.573.898 2.573z" fill="url(#K)" opacity=".428"/></g><path d="M22.232 23.34c1.519.145 2.892-.276 3.462-.481.099-.563.545-1.644 2.076-1.725l-.538-.942s-1.996 1.368-4.126 1.772l-.875 1.368z" fill="url(#L)"/><path d="M65.138.733l-.503 2.856H51.198l-5.423 30.756h15.261l.317-1.797.185-1.059h25.053l-.503 2.856h8.419l.317-1.797.185-1.059h6.844l4.92-27.9H73.055l.054-.308.448-2.548h-8.419z" fill="url(#M)"/><path d="M66.961 2.906l-.783 4.44h4.006l.783-4.44h-4.006zM53.021 5.762l-3.413 19.359h6.844l-.462 2.607h-6.844l-.783 4.445h10.849L63.87 5.762H53.021zm20.033 0l-4.151 23.554h4.006l3.368-19.115h2.838l-3.368 19.115h4.006l3.367-19.115h2.838l-3.368 19.115h4.006l4.151-23.555H73.054zm20.282 0l-4.657 26.411h4.006l.507-2.856h6.844l4.151-23.555H93.336zM65.871 9.098l-3.562 20.219h4.006l3.562-20.219h-4.006zm-9.628 1.104h2.838l-1.847 10.474h-2.838l1.847-10.474zm40.316 0h2.838l-2.584 14.67h-2.838l2.584-14.669z" fill="url(#N)"/><path d="M66.961 2.906l-.783 4.44h4.006l.783-4.44h-4.006zM53.021 5.762l-2.163 12.266 3.82 1.064 1.566-8.89h2.838l-1.675 9.501 3.888.67L63.87 5.762H53.021zm20.033 0l-2.702 15.33 1.399.014 2.612-.045 1.915-10.859h2.838l-1.887 10.7 4.083-.412 1.811-10.288h2.838l-1.734 9.849 4.155-.851 2.367-13.438H73.054zm20.282 0L91.091 18.49l4.25-1.38 1.218-6.907h2.838l-1 5.676a48.64 48.64 0 0 0 4.395-2.195l1.394-7.921h-10.85zM65.871 9.098l-2.041 11.587 3.951.312 2.096-11.9h-4.006z" fill="url(#O)"/></g></symbol></svg>